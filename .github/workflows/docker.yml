name: Build & Push Docker image

on:
  push:
    branches: [ main ]
    tags: [ 'v*', 'release-*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  IMAGE_NAME: jewish-holidays

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            # latest on default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # branch name (e.g. main, feature-x)
            type=ref,event=branch
            # git tags (e.g. v1.2.3)
            type=ref,event=tag
            # short SHA (fallback tag)
            type=
      - name: Guard: no next/document or <Html> in repo
        run: |
          set -euo pipefail
          echo "Scanning repository..."
          bad1=$(grep -R --line-number --exclude-dir=node_modules --exclude-dir=.next "next/document" . || true)
          bad2=$(grep -R --line-number --exclude-dir=node_modules --exclude-dir=.next "<Html" . || true)
          if [ -n "$bad1$bad2" ]; then
            echo "::error::Found forbidden usage:"
            [ -n "$bad1" ] && echo "$bad1"
            [ -n "$bad2" ] && echo "$bad2"
            exit 1
          fi

      - name: Build & (conditionally) push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
