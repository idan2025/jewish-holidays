name: Build and Push Docker Image

on:
  push:
    branches: ["main"]
    tags: ["v*", "release-*"]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: production
  DOCKERHUB_REPO: idan2025/jewish-holidays

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ---- Guard step: fail if repo source contains next/document or <Html>
      # Exclude CI config (.github), node_modules, and .next output.
      - name: "Guard: no next/document or <Html> in source"
        shell: bash
        run: |
          set -euo pipefail
          echo "Scanning workspace for forbidden patternsâ€¦"

          # Use git grep so we can exclude paths reliably.
          bad1=$(git grep -n -e 'next/document' -- \
                  . ':(exclude).github/**' ':(exclude)node_modules/**' ':(exclude).next/**' || true)
          bad2=$(git grep -n -e '<Html' -- \
                  . ':(exclude).github/**' ':(exclude)node_modules/**' ':(exclude).next/**' || true)

          if [[ -n "$bad1$bad2" ]]; then
            echo "::error::Found forbidden usage in source files."
            [[ -n "$bad1" ]] && echo "$bad1"
            [[ -n "$bad2" ]] && echo "$bad2"
            exit 1
          fi
          echo "OK: no forbidden patterns in source."

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          provenance: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.DOCKERHUB_REPO }}:latest
            ${{ env.DOCKERHUB_REPO }}:main
            ${{ env.DOCKERHUB_REPO }}:sha-${{ github.sha }}

      - name: Summarize
        if: always()
        shell: bash
        run: |
          echo "Ref:        $GITHUB_REF"
          echo "Commit:     $GITHUB_SHA"
          echo "Pushed:     $([[ '${{ github.event_name }}' != 'pull_request' ]] && echo yes || echo no)"
